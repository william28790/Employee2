quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=PROYECTOERM
#quarkus.datasource.reactive.url=postgresql://prueba1.cv3kuptes9q7.us-east-1.rds.amazonaws.com:5432/Prueba1
quarkus.datasource.reactive.url=postgresql://localhost:5432/IBM_ERM
quarkus.datasource.driver=org.postgresql.Driver
quarkus.datasource.reactive.max-size=20
quarkus.hibernate-orm.log.sql=true
#quarkus.datasource.jdbc=false
#quarkus.hibernate-orm.database.generation=update
#

#quarkus.hibernate-orm.database.generation=drop-and-create

#se utilizó la primera vez despues se comenta sino se borra todos
quarkus.swagger-ui.path=swaggerui
quarkus.http.port=8085
mp.openapi.extensions.smallrye.info.title=Example API
%dev.mp.openapi.extensions.smallrye.info.title=Example API (development)
%test.mp.openapi.extensions.smallrye.info.title=Example API (test)
mp.openapi.extensions.smallrye.info.version=1.0.1
mp.openapi.extensions.smallrye.info.description=Just an example service
mp.openapi.extensions.smallrye.info.termsOfService=Your terms here
mp.openapi.extensions.smallrye.info.contact.email=techsupport@example.com
mp.openapi.extensions.smallrye.info.contact.name=Example API Support
mp.openapi.extensions.smallrye.info.contact.url=http://exampleurl.com/contact
mp.openapi.extensions.smallrye.info.license.name=Apache 2.0
mp.openapi.extensions.smallrye.info.license.url=https://www.apache.org/licenses/LICENSE-2.0.html

#Habilitacion de cors
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET, POST
#-----------------------USANDO LA BASE A TRAVEZ DE UNA INSTANCIA DE EC2 CON EL SECURITY GROUP
#quarkus.datasource.reactive.url=postgresql://ec2-18-209-159-94.compute-1.amazonaws.com:5432/Prueba1
#-----------------------conexión a mi base de datos local Funciona ok!
#quarkus.datasource.reactive.url=postgresql://localhost:5432/Prueba1
#-----------------------También lo probamos así
#quarkus.datasource.reactive.url=postgresql://167.60.26.107/36:5432/Prueba1
#quarkus.datasource.jdbc=jdbc:postgresql://prueba1.cv3kuptes9q7.us-east-1.rds.amazonaws.com:5432/Prueba1
#jdbc:postgresql://prueba1.cv3kuptes9q7.us-east-1.rds.amazonaws.com:5432/Prueba1
#También así
#quarkus.datasource.reactive.url=postgresql://prueba1.cv3kuptes9q7.us-east-1.rds.amazonaws.com:5432/Prueba1
#quarkus.datasource.jdbc.url=jdbc:postgresql://tudbinstance.cij1sdfw4o7o.us-west-2.rds.amazonaws.com:5432/tudb
#-----------------------JDBC QUE TENGO EN LA BASE POR EL IDE INTELIJ
#jdbc:postgresql://prueba1.cv3kuptes9q7.us-east-1.rds.amazonaws.com:5432/Prueba1#PARA PROBAR AWS
#quarkus.datasource.jdbc=false
#quarkus.datasource.reactive.url=prueba1.cv3kuptes9q7.us-east-1.rds.amazonaws.com

#quarkus.datasource.reactive.url=postgresql://prueba1.cv3kuptes9q7.us-east-1.rds.amazonaws.com:5432/Prueba1

#quarkus.datasource.jdbc.url=postgresql://prueba1.cv3kuptes9q7.us-east-1.rds.amazonaws.com:5432/Prueba1

#así lo vi en gpt
#quarkus.datasource.jdbc.url=jdbc:postgresql://<host>:<port>/<database>
#Donde:

#<host> es la dirección del servidor de la base de datos de Amazon RDS.
#<port> es el puerto en el que la base de datos está escuchando (por lo general, el valor predeterminado es 5432 para PostgreSQL).
#<database> es el nombre de la base de datos a la que deseas conectarte.
#Además, debes proporcionar las credenciales necesarias para conectarte a la base de datos. Puedes hacerlo utilizando las siguientes propiedades:

#Entonces, en tu archivo application.properties, deberías tener algo como esto:
#quarkus.datasource.jdbc.url=jdbc:postgresql://tudbinstance.cij1sdfw4o7o.us-west-2.rds.amazonaws.com:5432/tudb
